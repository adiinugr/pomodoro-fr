"use client";
import { useState } from "react";
import Link from "next/link";
import { Spin as Hamburger } from "hamburger-react";
import { IoCloseSharp } from "react-icons/io5";
import Switch from '@mui/material/Switch';
import { Dropdown } from 'primereact/dropdown';

function Navbar() {
  const [isShowMenu, setIsShowMenu] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [bgImage, setBgImage] = useState('/images/bg-1.jpg');
  const menus = [
    {
      id: 1,
      title: "Home",
      url: "/",
    },
  ];

  const handleBgChange = (image: string) => {
    setBgImage(image);
    setIsModalOpen(false);
  };

  const label = { inputProps: { 'aria-label': 'Size switch demo' } };

  const [selectedCity, setSelectedCity] = useState(null);
    const cities = [
        { name: 'New York', code: 'NY' },
        { name: 'Rome', code: 'RM' },
        { name: 'London', code: 'LDN' },
        { name: 'Istanbul', code: 'IST' },
        { name: 'Paris', code: 'PRS' }
    ];

  return (
    <div className="bg-[#fff3e2] h-[72px] fixed top-0 w-full transparent backdrop-filter z-10 border-b">
      <nav className="container mx-auto max-w-[1200px] hidden sm:hidden md:grid grid-cols-3 mt-3">
        <div className="">
            <div className="flex items-center col-span-1 mt-2">
              <Link
                href="/"
                className="items-center flex text-lg font-semibold"
              >
                <svg width="136" height="28" viewBox="0 0 136 28" fill="none" xmlns="http://www.w3.org/2000/svg" className="css-2gmpvr"><path d="M23.5576 24.4428C23.4015 24.5875 23.2417 24.725 23.0783 24.8588C17.1961 29.7385 8.362 28.8342 3.34763 22.8404C-1.67036 16.8429 -0.965958 8.024 4.91621 3.14428C5.08323 3.01044 5.24663 2.87299 5.42091 2.75C0.475536 7.28969 0.34119 15.4611 5.21758 21.2922C10.094 27.1196 18.1801 28.4616 23.5576 24.4428Z" fill="#C6202F"></path><path d="M24.7665 5.29874C24.7302 5.25533 24.6939 5.20831 24.6575 5.1649C24.614 5.11426 24.5704 5.06 24.5268 5.00574C24.4796 4.95148 24.4361 4.90084 24.3889 4.84296C19.4653 -0.702331 11.1903 -1.60303 5.42432 2.74494C0.482573 7.28463 0.348227 15.4561 5.22462 21.2871C10.101 27.1182 18.1872 28.4638 23.561 24.4414C28.9602 19.5255 29.523 11.1262 24.7665 5.29874ZM23.4085 22.9872C18.5648 27.006 10.9252 25.8304 6.34295 20.3539C1.76067 14.8773 1.98216 7.17611 6.82587 3.15369C11.6696 -0.865109 19.3091 0.310508 23.8914 5.78707C28.4737 11.2636 28.2558 18.9684 23.4085 22.9872Z" fill="#E94C44"></path><path d="M23.8832 5.78993C19.3046 0.313361 11.665 -0.865873 6.81766 3.15654C1.97032 7.17896 1.75609 14.8765 6.33474 20.3531C10.9134 25.8297 18.5493 27.0089 23.3967 22.9865C28.244 18.9641 28.4582 11.2665 23.8832 5.78993ZM22.518 21.4636C18.2879 24.976 11.636 23.9668 7.66004 19.21C3.68414 14.4569 3.8911 7.75411 8.12118 4.24896C12.3513 0.736583 19.0032 1.7458 22.9791 6.50253C26.955 11.2556 26.748 17.9548 22.518 21.4636Z" fill="white"></path><path d="M22.5193 21.464C18.2892 24.9764 11.6373 23.9672 7.66135 19.2104C3.68544 14.4573 3.8924 7.75451 8.12248 4.24937C12.3526 0.736987 19.0045 1.74621 22.9804 6.50293C26.9563 11.256 26.7493 17.9553 22.5193 21.464Z" fill="#EA513B"></path><path d="M19.5884 14.4281C19.9079 14.2978 20.2456 14.2581 20.5905 14.2146C20.8955 14.1785 21.1751 14.2436 21.4111 14.4317C21.5418 14.5366 21.6617 14.6813 21.7379 14.8296C21.894 15.1262 21.8759 15.4301 21.658 15.6905C21.4293 15.9582 21.1206 16.0233 20.8011 15.9148C20.6159 15.8533 20.4417 15.7375 20.2928 15.6145C20.0604 15.4301 19.6792 14.7428 19.5884 14.4281Z" fill="#FEFDFD"></path><path d="M17.4393 16.4658C17.8641 16.7009 18.2708 16.9361 18.5903 17.2906C18.7683 17.4895 18.8554 17.7319 18.8518 18.0068C18.8409 18.5928 18.3144 18.9364 17.7734 18.7013C17.3812 18.5313 17.1888 18.2057 17.1343 17.8006C17.098 17.5004 17.2687 16.7697 17.4393 16.4658Z" fill="#FEFDFD"></path><path d="M19.5088 11.3176C19.694 10.9161 19.8828 10.5507 20.1696 10.2541C20.4601 9.95028 20.9467 9.91049 21.3097 10.1311C21.6547 10.3446 21.8326 10.7823 21.7128 11.1476C21.5966 11.5057 21.2335 11.7589 20.8232 11.7264C20.3693 11.6938 19.9518 11.5093 19.5088 11.3176Z" fill="#FEFDFD"></path><path d="M12.0707 10.7484C11.6931 10.8678 11.3337 10.9401 10.9669 10.9691C10.7128 10.9872 10.484 10.9184 10.2807 10.7846C10.0156 10.6146 9.85222 10.3795 9.80865 10.0648C9.7324 9.50047 10.2589 9.08087 10.829 9.25449C10.9742 9.2979 11.1194 9.3594 11.2284 9.45706C11.6241 9.80432 11.8347 10.271 12.0707 10.7484Z" fill="#FEFDFD"></path><path d="M12.151 13.8867C11.9295 14.2304 11.7444 14.5632 11.5156 14.8634C11.236 15.2324 10.666 15.2866 10.2702 15.0117C9.90347 14.7513 9.77275 14.2376 9.99061 13.8759C10.1794 13.5648 10.4772 13.431 10.8221 13.4599C11.2614 13.4961 11.6681 13.6516 12.0639 13.8361C12.0784 13.8433 12.0929 13.8542 12.151 13.8867Z" fill="#FEFDFD"></path><path d="M17.2862 8.99916C17.1918 8.64829 17.0865 8.35167 17.0284 8.04782C16.9885 7.83802 16.9667 7.61013 17.0103 7.40756C17.1011 6.95902 17.4605 6.69857 17.8672 6.73836C18.292 6.77454 18.6551 7.14712 18.6842 7.58119C18.7096 7.95377 18.5861 8.26486 18.2593 8.46742C17.9616 8.64829 17.6421 8.80021 17.2862 8.99916Z" fill="#FEFDFD"></path><path d="M14.2214 8.7308C13.7676 8.45951 13.321 8.23524 13.0087 7.84095C12.8489 7.642 12.7763 7.40688 12.7872 7.15005C12.809 6.60023 13.3101 6.26743 13.8257 6.47C14.2505 6.6364 14.4683 6.96557 14.4974 7.39603C14.5301 7.84095 14.3812 8.26779 14.2214 8.7308Z" fill="#FEFDFD"></path><path d="M14.3256 16.2197C14.4889 16.6936 14.6596 17.1313 14.6451 17.6124C14.6306 18.0826 14.2784 18.4371 13.8499 18.448C13.3888 18.4588 12.9821 18.0971 12.9349 17.6341C12.9058 17.323 12.9857 17.0408 13.2254 16.8274C13.534 16.5525 13.9116 16.3825 14.3256 16.2197Z" fill="#FEFDFD"></path><path d="M40.8267 7.60742H34.5436C34.5223 7.60742 34.501 7.62546 34.501 7.65071V20.3352C34.501 20.3569 34.5187 20.3785 34.5436 20.3785H36.9184C36.9397 20.3785 36.961 20.3605 36.961 20.3352V15.2051H39.9854C40.0067 15.2051 40.028 15.1871 40.028 15.1618V13.239C40.028 13.2173 40.0103 13.1957 39.9854 13.1957H36.961V9.60967H40.8267C40.848 9.60967 40.8693 9.59163 40.8693 9.56638V7.6435C40.8658 7.62546 40.848 7.60742 40.8267 7.60742Z" fill="black"></path><path d="M46.0294 7.45142C43.7469 7.45142 42.3838 8.8115 42.3838 11.0879V16.8926C42.3838 19.1691 43.7469 20.5292 46.0294 20.5292C48.3119 20.5292 49.6751 19.1691 49.6751 16.8926V11.0879C49.6751 8.8115 48.3119 7.45142 46.0294 7.45142ZM47.2186 17.0297C47.2186 17.9533 46.7642 18.5233 46.0294 18.5233C45.2946 18.5233 44.8402 17.9497 44.8402 17.0297V10.9544C44.8402 10.0309 45.2946 9.46088 46.0294 9.46088C46.7642 9.46088 47.2186 10.0345 47.2186 10.9544V17.0297Z" fill="black"></path><path d="M55.1828 7.45142C52.9393 7.45142 51.6011 8.8115 51.6011 11.0879V16.8926C51.6011 19.1691 52.9393 20.5292 55.1828 20.5292C57.4263 20.5292 58.7646 19.1691 58.7646 16.8926V15.7021C58.7646 15.6805 58.7468 15.6588 58.722 15.6588H56.4785C56.4572 15.6588 56.4359 15.6769 56.4359 15.7021V17.0297C56.4359 17.9533 55.9922 18.5053 55.2467 18.5053C54.5013 18.5053 54.0575 17.9533 54.0575 17.0297V10.9544C54.0575 10.0309 54.5119 9.46088 55.2467 9.46088C55.9815 9.46088 56.4359 10.0345 56.4359 10.9544V11.8022C56.4359 11.8239 56.4537 11.8455 56.4785 11.8455H58.722C58.7433 11.8455 58.7646 11.8275 58.7646 11.8022V11.0915C58.7646 8.8115 57.4228 7.45142 55.1828 7.45142Z" fill="black"></path><path d="M67.9506 7.6081H65.7072C65.6859 7.6081 65.6646 7.62614 65.6646 7.65139V17.0493C65.6646 17.9729 65.2208 18.5249 64.4754 18.5249C63.7299 18.5249 63.2862 17.9729 63.2862 17.0493V7.64778C63.2862 7.62614 63.2684 7.60449 63.2436 7.60449H60.8688C60.8475 7.60449 60.8262 7.62253 60.8262 7.64778V16.9122C60.8262 19.1887 62.1644 20.5488 64.4079 20.5488C66.6514 20.5488 67.9897 19.1887 67.9897 16.9122V7.64778C67.9932 7.62614 67.9719 7.6081 67.9506 7.6081Z" fill="black"></path><path d="M74.8156 13.2987C73.779 12.6241 72.7993 11.9892 72.7993 10.7409C72.7993 9.86426 73.1649 9.45659 73.9459 9.45659C74.7268 9.45659 75.0925 9.86426 75.0925 10.7409V11.3001C75.0925 11.3218 75.1102 11.3434 75.1351 11.3434H77.3785C77.3998 11.3434 77.4211 11.3254 77.4211 11.3001V10.878C77.4211 8.67013 76.1645 7.45435 73.882 7.45435C71.5995 7.45435 70.3428 8.67013 70.3428 10.878C70.3428 12.9813 71.7379 13.8868 72.9661 14.6841C74.0027 15.3587 74.9824 15.9937 74.9824 17.2419C74.9824 18.1041 74.6061 18.5082 73.7932 18.5082C72.9839 18.5082 72.6041 18.1077 72.6041 17.2419V16.2823C72.6041 16.2606 72.5863 16.239 72.5615 16.239H70.318C70.2967 16.239 70.2754 16.257 70.2754 16.2823V17.1084C70.2754 19.3163 71.5462 20.5321 73.8571 20.5321C76.1681 20.5321 77.4389 19.3163 77.4389 17.1084C77.4389 15.0016 76.0438 14.096 74.8156 13.2987Z" fill="black"></path><path d="M91.9122 7.64778C91.9122 7.62614 91.8945 7.60449 91.8696 7.60449H89.4948C89.4806 7.60449 89.4664 7.61171 89.4593 7.62614L86.4278 12.9691V7.64778C86.4278 7.62614 86.41 7.60449 86.3852 7.60449H84.0104C83.9891 7.60449 83.9678 7.62253 83.9678 7.64778V20.3323C83.9678 20.3539 83.9855 20.3756 84.0104 20.3756H86.3852C86.4065 20.3756 86.4278 20.3575 86.4278 20.3323V16.2196L87.1094 15.4331L89.3919 20.3539C89.399 20.3684 89.4132 20.3792 89.4309 20.3792H91.8696C91.8838 20.3792 91.898 20.372 91.9051 20.3612C91.9122 20.3503 91.9122 20.3323 91.9087 20.3215L88.6145 13.2685L91.9016 7.68025C91.9087 7.66943 91.9122 7.65861 91.9122 7.64778Z" fill="black"></path><path d="M100.288 7.60742H93.8131C93.7918 7.60742 93.7705 7.62546 93.7705 7.65071V20.3352C93.7705 20.3569 93.7883 20.3785 93.8131 20.3785H100.288C100.309 20.3785 100.331 20.3605 100.331 20.3352V18.4123C100.331 18.3907 100.313 18.3691 100.288 18.3691H96.227V14.8985H99.2372C99.2585 14.8985 99.2798 14.8805 99.2798 14.8552V12.9323C99.2798 12.9107 99.2621 12.889 99.2372 12.889H96.227V9.60967H100.288C100.309 9.60967 100.331 9.59163 100.331 9.56638V7.6435C100.331 7.62546 100.309 7.60742 100.288 7.60742Z" fill="black"></path><path d="M109.101 7.60742H102.626C102.605 7.60742 102.583 7.62546 102.583 7.65071V20.3352C102.583 20.3569 102.601 20.3785 102.626 20.3785H109.101C109.122 20.3785 109.144 20.3605 109.144 20.3352V18.4123C109.144 18.3907 109.126 18.3691 109.101 18.3691H105.04V14.8985H108.05C108.071 14.8985 108.093 14.8805 108.093 14.8552V12.9323C108.093 12.9107 108.075 12.889 108.05 12.889H105.04V9.60967H109.101C109.122 9.60967 109.144 9.59163 109.144 9.56638V7.6435C109.14 7.62546 109.122 7.60742 109.101 7.60742Z" fill="black"></path><path d="M114.92 7.60742H111.423C111.402 7.60742 111.381 7.62546 111.381 7.65071V20.3352C111.381 20.3569 111.399 20.3785 111.423 20.3785H113.798C113.82 20.3785 113.841 20.3605 113.841 20.3352V15.7066H114.924C117.266 15.7066 118.505 14.5413 118.505 12.3407V10.9734C118.502 8.76909 117.263 7.60742 114.92 7.60742ZM116.042 12.4741C116.042 13.3436 115.715 13.7007 114.916 13.7007H113.834V9.61328H114.916C115.715 9.61328 116.042 9.96683 116.042 10.8399V12.4741Z" fill="black"></path><path d="M126.739 7.64282H120.264C120.242 7.64282 120.221 7.66086 120.221 7.68611V20.3706C120.221 20.3923 120.239 20.4139 120.264 20.4139H126.739C126.76 20.4139 126.781 20.3959 126.781 20.3706V18.4477C126.781 18.4261 126.763 18.4045 126.739 18.4045H122.678V14.9339H125.688C125.709 14.9339 125.73 14.9159 125.73 14.8906V12.9677C125.73 12.9461 125.713 12.9244 125.688 12.9244H122.678V9.64507H126.739C126.76 9.64507 126.781 9.62703 126.781 9.60178V7.6789C126.781 7.66086 126.76 7.64282 126.739 7.64282Z" fill="black"></path><path d="M134.496 14.1763C135.493 13.7181 135.98 12.8234 135.98 11.4489V10.7779C135.98 8.63853 134.847 7.64282 132.419 7.64282H128.838C128.816 7.64282 128.795 7.66086 128.795 7.68611V20.3706C128.795 20.3923 128.813 20.4139 128.838 20.4139H131.212C131.234 20.4139 131.255 20.3959 131.255 20.3706V15.3199H132.032C133.08 15.3199 133.545 15.3704 133.545 16.6042V20.3634C133.545 20.3851 133.562 20.4067 133.587 20.4067L135.962 20.4247C135.973 20.4247 135.983 20.4211 135.99 20.4139C135.997 20.4067 136.001 20.3959 136.001 20.3851V16.6583C136.005 15.2622 135.621 14.6236 134.496 14.1763ZM133.523 11.9323C133.523 12.8884 133.097 13.3141 132.139 13.3141H131.251V9.64868H132.355C133.172 9.64868 133.523 10.0491 133.523 10.9907V11.9323Z" fill="black"></path></svg>
              </Link>
              
            </div>
          </div>
        <div className="mt-3">
          <div className="grid grid-cols-2 gap-2">
                <div className="col-span-1 justify-self-center">
                  <div className="py-1 px-8">
                    <button onClick={() => setIsModalOpen(true)}>
                      <p className="text-[14px] font-medium text-black cursor-pointer">
                        Timer Options
                      </p>
                    </button>
                  </div>
                </div>
                <div className="col-span-1 justify-self-center">
                  <div className="py-1 px-8">
                    <Link href={"/"}>
                      <p className="text-[14px] font-medium text-black cursor-pointer">
                        Report
                      </p>
                    </Link>
                  </div>
                </div>
            </div>
        </div>
        <div className="flex justify-end mt-1">
          <div className="p-2 px-4 rounded-md bg-[#ff5c5c] text-white">
            Login
          </div>
        </div>
        {isModalOpen && (
        <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-10">
          <div className="bg-white p-5 container rounded-lg shadow-lg max-w-[420px]">
            <div className="flex items-center justify-between">
                <p className="text-[26px] font-semibold mb-4 mt-5">Options</p>
                <IoCloseSharp size={30} onClick={() => setIsModalOpen(false)} />
            </div>
            <div className="flex justify-between items-center mt-3">
              <p className="text-[16px] font-medium">
                Auto Start Break
              </p>
              <Switch {...label} defaultChecked />
            </div>
            <hr className="mt-3" />
            <div className="flex justify-between items-center mt-3">
              <p className="text-[16px] font-medium">
                Auto Start Focus
              </p>
              <Switch {...label} defaultChecked />
            </div>
            <hr className="mt-3" />
            <div className="flex justify-between items-center mt-3">
              <p className="text-[16px] font-medium">
                Long Break interval
              </p>
              <input
              type="number"
              placeholder="4"
              className="w-[80px] px-2 py-2 border rounded-lg"
            />
            </div>
            <hr className="mt-3 mb-3" />
              <p className="text-[16px] font-medium mb-3">
                alarm Sound
              </p>
              <div className="grid grid-cols-3 gap-2">
              <div className="bg-white border card flex justify-content-center">
                  <Dropdown value={selectedCity} onChange={(e) => setSelectedCity(e.value)} options={cities} optionLabel="name" 
                      placeholder="Select a City" className="w-full md:w-14rem bg-white z-10" />
              </div>
              </div>
            <input
              type="text"
              placeholder="Enter image URL"
              className="w-full px-4 py-2 mb-4 border rounded mt-4"
              onKeyDown={(e) => {
                if (e.key === 'Enter') {
                  handleBgChange((e.target as HTMLInputElement).value);
                }
              }}
            />
            <button
              onClick={() => setIsModalOpen(false)}
              className="mt-4 w-full py-2 bg-red-600 text-white rounded-full focus:outline-none"
            >
              Done
            </button>
          </div>
        </div>
      )}
      </nav>

      {/* mobile view  */}
      <nav>
        <div className="grid grid-cols-2 2xl:hidden xl:hidden lg:hidden md:hidden sm:grid sm:grid-cols-2 mx-4 py-2">
          <div className="col-span-1 sm:col-span-1">
            <Link href="/" className="items-center flex text-lg font-semibold mt-1">
             
              <p className="font-semibold text-lg mt-1 text-[#000000]">
                  Aesthetic<span className="text-[#000000]">timer.com</span>
                </p>
            </Link>
          </div>

          <div className="text-black col-span-1 sm:col-span-1 justify-self-end sm:justify-self-end mt-[-3px]">
            <Hamburger
              label="Hamburger"
              size={28}
              toggled={isShowMenu}
              toggle={setIsShowMenu}
            />
          </div>

          {/* Navbar Mobile View - Start  */}
          <div
            className={`${
              isShowMenu ? "top-14 opacity-100" : "top-8 opacity-0 hidden"
            } absolute left-0 lg:static bg-white lg:bg-inherit shadow-xl lg:shadow-none lg:opacity-100 items-center justify-between w-full lg:flex lg:w-auto lg:order-1 rounded-b-xl p-4 lg:p-0 transition-all z-10`}
            id="navbar-sticky"
          >
            <ul className="flex flex-col gap-2 lg:gap-0 font-medium rounded-lg lg:flex-row lg:space-x-8 lg:mt-0">
              {menus.map((menu) => (
                <li key={menu.id}>
                  <Link
                    onClick={() => (menu.title)}
                    href={menu.url}
                    className="block py-2 px-4 hover:text-nh-primary-500 text-[#368AB2]"
                  >
                    {menu.title}
                  </Link>
                </li>
              ))}
            </ul>
          </div>
          {/* Navbar Mobile View - End  */}
        </div>
      </nav>
    </div>
  );
}

export default Navbar;
